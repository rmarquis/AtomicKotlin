type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 247
    length: 71
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 235
    initialized_from_dependency: false
    selected: false
    status: Solved
    encrypted_possible_answer: |-
      Count.values()[
          (ordinal + 1) % Count.values().size
        ]
  - offset: 356
    length: 85
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 279
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      if (ordinal - 1 < 0)
          Count.max
        else
          Count.values()[ordinal - 1]
  text: |-
    // OperatorOverloading/OpOverloadingSoln2.kt
    package operatorOverloadingExercise2
    import atomictest.trace

    enum class Count {
      Eeny, Meeny, Miney, Moe;
      companion object {
        val max = Moe
      }
    }

    operator fun Count.inc(): Count =
      TODO()

    operator fun Count.dec(): Count =
      TODO()

    fun main() {
      var c = Count.Eeny
      for (n in 1..4) {
        trace("${c++} -> $c")
      }
      trace("---------------")
      for (n in 1..4) {
        trace("${++c} -> $c")
      }
      trace("---------------")
      for (n in 1..4) {
        trace("${c--} -> $c")
      }
      trace("---------------")
      for (n in 1..4) {
        trace("${--c} -> $c")
      }
      trace eq """
        Eeny -> Meeny
        Meeny -> Miney
        Miney -> Moe
        Moe -> Eeny
        ---------------
        Meeny -> Meeny
        Miney -> Miney
        Moe -> Moe
        Eeny -> Eeny
        ---------------
        Eeny -> Moe
        Moe -> Miney
        Miney -> Meeny
        Meeny -> Eeny
        ---------------
        Moe -> Moe
        Miney -> Miney
        Meeny -> Meeny
        Eeny -> Eeny
      """
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package operatorOverloadingExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestOperatorOverloadingExercise2 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Fri, 16 Jul 2021 09:41:51 UTC
record: -1
