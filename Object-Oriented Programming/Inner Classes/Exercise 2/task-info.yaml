type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 81
    length: 519
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 80
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      class Box(contains: String, label: String) {
        inner class Contents(val contains: String)
        inner class Destination(val label: String)
        private val contents = Contents(contains)
        private val destination = Destination(label)
        private val x = object : Any() {
          fun f() = "Any-based"
        }
        fun manifest() =
          "${contents.contains}: " +
          "${destination.label} ${x.f()}"
      }

      fun main() {
        Box("Computer", "Tasmania").manifest() eq
          "Computer: Tasmania Any-based"
      }
  text: |-
    // InnerClasses/InnerEx2.kt
    package innerClassesExercise2
    import atomictest.eq

    // TODO
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package innerClassesExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestInnerClassesExercise2 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Mon, 12 Jul 2021 16:14:43 UTC
record: -1
