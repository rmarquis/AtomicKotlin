type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 96
    length: 87
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 95
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      val initOrder = mutableListOf<String>()
        init {
          initOrder += "Game"
        }
  - offset: 221
    length: 47
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 139
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      init {
          initOrder += "BoardGame"
        }
  - offset: 302
    length: 43
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 179
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      init {
          initOrder += "Chess"
        }
  - offset: 364
    length: 49
    placeholder_text: // Chess().initOrder eq "[Game, BoardGame, Chess]"
    initial_state:
      length: 50
      offset: 205
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: Chess().initOrder eq "[Game, BoardGame, Chess]"
  text: |-
    // Inheritance/Task3.kt
    package inheritanceExercise3
    import atomictest.eq

    open class Game {
      // TODO
    }

    open class BoardGame: Game() {
      // TODO
    }

    class Chess: BoardGame() {
      // TODO
    }

    fun main() {
      // Chess().initOrder eq "[Game, BoardGame, Chess]"
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |
    package inheritanceExercise3

    import org.junit.FixMethodOrder
    import org.junit.Test
    import org.junit.runners.MethodSorters
    import util.assertConstructorNumber
    import util.assertInheritance
    import util.loadMemberProperty
    import kotlin.test.assertEquals

    @FixMethodOrder(MethodSorters.NAME_ASCENDING)
    class TestInheritanceExercise3 {

        @Test
        fun `#01 classes structure`() {
            val aClass = Game::class
            val bClass = BoardGame::class
            val cClass = Chess::class

            aClass.assertConstructorNumber(1)
            bClass.assertConstructorNumber(1)
            cClass.assertConstructorNumber(1)

            bClass.assertInheritance(aClass)
            cClass.assertInheritance(bClass)

            val optProperty = loadMemberProperty(aClass, "initOrder")
            assertEquals(
                    actual = optProperty.returnType.toString(),
                    expected = "kotlin.collections.MutableList<kotlin.String>",
                    message = "Property 'initOrder' should have the type MutableList<String>"
            )
        }

        @Test
        fun `#02 initialisation order`() {
            val cClass = Chess::class
            val instance = cClass.constructors.first().call()

            loadMemberProperty(cClass, "initOrder")
                    .call(instance)
                    .also { opt ->
                        assertEquals(
                                expected = listOf("Game", "BoardGame", "Chess"),
                                actual = opt,
                                message = "Member property `initOrder` of class Chess should be equal to " +
                                        "[\"Game\", \"BoardGame\", \"Chess\""
                        )
                    }

        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 04 Jul 2021 12:43:50 UTC
record: -1
