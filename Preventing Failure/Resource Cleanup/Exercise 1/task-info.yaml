type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 225
    length: 208
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 224
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      val f = File("DataFiles/CleanupSoln1.txt")
        if(f.exists())
          f.delete()
        f.createNewFile()
        f.appendText(text)
        trace(f.useLines { it.joinToString("\n") })
        f.forEachLine { trace(it) }
  text: |-
    // ResourceCleanup/ResourceCleanupSoln1.kt
    package resourceCleanupExercise1
    import atomictest.trace
    import java.io.File

    val text = """
    Swing low, sweet chariot
    Coming for to carry me home
    """.trim()

    fun writeAndRead() {
      TODO()
    }

    fun main() {
      writeAndRead()
      trace eq """
        Swing low, sweet chariot
        Coming for to carry me home
        Swing low, sweet chariot
        Coming for to carry me home
      """
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package resourceCleanupExercise1

    import org.junit.Test
    import util.unimplementedTest

    class TestResourceCleanupExercise1 {
        @Test fun testSolution() {
            unimplementedTest()
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 15 Jul 2021 10:45:12 UTC
record: -1
